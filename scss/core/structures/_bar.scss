////
/// Bar
/// @group core-structures
/// @author Benjamin Fleming
////


// Settings
// --------

/// Controls whether styles in this file (bar) are generated.
/// @type Boolean
$sl-generate-bar: $sl-generate !default;

/// The bar module selector
/// @type String
$sl-bar-selector: sl-module('bar') !default;

/// The bar item module selector
/// @type String
$sl-bar-item-selector: sl-module('item') !default;


// Asserts
// -------

@include sl-assert($sl-generate-bar, 'bool');
@include sl-assert($sl-bar-selector, 'string');
@include sl-assert($sl-bar-item-selector, 'string');


// Styles
// ------

@if $sl-generate-bar {

	#{$sl-bar-selector} {
		@extend %sl-structure;

		> #{$sl-bar-item-selector} {

			// This feature is only available in browsers that support flexbox (IE10+)
			@include sl-parameter('fill') {
				@include sl-flex-grow(1);
			}
		}

		@each $breakpoint-name, $breakpoint-value in sl-sort($sl-breakpoints) {

			@include sl-from($breakpoint-value) {

				@include sl-parameter('fitted' + sl-prefix('breakpoint') + $breakpoint-name) {
					display: table; // TODO extend flexbox maybe?
					width: 100%;
					border-collapse: collapse;

					> #{$sl-bar-item-selector} {
						display: table-cell;

						@include sl-parameter('fit') {
							width: 1px;
							white-space: nowrap;
						}

						@include sl-parameter('compress') {
							width: 1px;
						}
					}

					@include sl-parameter('h-align-justify') {

						&:after {
							content: none;
							display: none;
						}
					}

					@each $gutter-name, $gutter-value in $sl-gutters {
						$gutter-top: sl-shorthand($gutter-value, top);
						$gutter-bottom: sl-shorthand($gutter-value, bottom);
						$gutter-left: sl-shorthand($gutter-value, left);
						$gutter-right: sl-shorthand($gutter-value, right);
						$gutter-h: max($gutter-left, $gutter-right);
						$gutter-v: max($gutter-top, $gutter-bottom);

						@include sl-parameter('h-gap-' + $gutter-name) {
							margin-left: 0;
							margin-right: 0;

							@include sl-parameter('h-outer-gap') {

								> #{$sl-bar-item-selector} {
									border-left-width: $gutter-h;
									border-right-width: $gutter-h;
								}
							}

							> #{$sl-bar-item-selector} {
								border-left-width: $gutter-h;
								border-right-width: 0;

								&:first-child {
									border-left-width: 0;
								}
							}
						}

						@include sl-parameter('v-gap-' + $gutter-name) {
							margin-top: 0;

							@include sl-parameter('v-outer-gap') {

								> #{$sl-bar-item-selector} {
									border-top: $gutter-v solid transparent;
									border-bottom: $gutter-v solid transparent;
								}
							}
						}
					}
				}
			}
		}
	}
}
