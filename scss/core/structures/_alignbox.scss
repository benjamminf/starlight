////
/// Align box
/// @group core-structures
/// @author Benjamin Fleming
////


// Settings
// --------

/// Controls whether styles in this file (alignbox) are generated.
/// @type Boolean
$sl-generate-alignbox: $sl-generate !default;

/// The alignbox module selector
/// @type String
$sl-alignbox-selector: sl-module('alignbox') !default;

/// The alignbox group module selector
/// @type String
$sl-alignbox-group-selector: sl-module('aligngroup') !default;

/// The alignbox box module selector
/// @type String
$sl-alignbox-box-selector: sl-module('box') !default;


// Asserts
// -------

@include sl-assert($sl-generate-alignbox, 'bool');
@include sl-assert($sl-alignbox-selector, 'string');
@include sl-assert($sl-alignbox-group-selector, 'string');
@include sl-assert($sl-alignbox-box-selector, 'string');


// Mixins
// ------

///
/// @require {mixin} sl-display-flex
/// @require {mixin} sl-flex-flow
/// @require {mixin} sl-justify-content
/// @require {mixin} sl-align-items
/// @param {String} $h-align [center]
/// @param {String} $v-align [center]
/// @output
@mixin sl-alignbox($h-align: center, $v-align: center) {
	@include sl-display-flex;
	@include sl-flex-flow(row nowrap);

	$valid-h-align: (left: flex-start, right: flex-end, center: center);
	$valid-v-align: (top: flex-start, bottom: flex-end, center: center);

	@if not map-has-key($valid-h-align, $h-align) {
		@error '#{inspect($h-align)} is not a valid horizontal alignment';
	}

	@if not map-has-key($valid-v-align, $v-align) {
		@error '#{inspect($h-align)} is not a valid vertical alignment';
	}

	@include sl-justify-content( map-get($valid-h-align, $h-align) );
	@include sl-align-items( map-get($valid-v-align, $v-align) );

	$v-align: if($v-align == 'center', middle, $v-align);

	width: 100%;
	height: 100%;
	word-spacing: -1em; // Remove spacing between items
	text-align: $h-align;
	white-space: nowrap;
	overflow: hidden;

	> * {
		vertical-align: $v-align !important;
		word-spacing: normal;
	}

	// Non-flexbox inline-block hack
	// http://stackoverflow.com/a/13075912/556609
	&:after {
		content: '';
		display: inline-block;
		vertical-align: $v-align;
		width: 0;
		height: 100%;
		word-spacing: normal;
	}
}

///
/// @output
@mixin sl-alignbox-box {
	display: inline-block;
	white-space: normal;
	text-align: inherit;
}


// Styles
// ------

@if $sl-generate-alignbox {

	#{$sl-alignbox-selector} {
		@include sl-alignbox;

		// Target wildcard (*) as wildcard selectors have the lowest specificity and will not override any settings that
		// are applied to any other selector. Then target .box as it WILL override other selectors, which is fine as by
		// applying the .box selector the element you are explicitly setting these properties rather than implicitly.
		> *,
		> #{$sl-alignbox-box-selector} {
			@include sl-alignbox-box;
		}

		@include sl-parameter('h-align-left') {
			@include sl-justify-content(flex-start);

			text-align: left;
		}

		@include sl-parameter('h-align-right') {
			@include sl-justify-content(flex-end);

			text-align: right;
		}

		@include sl-parameter('h-align-center') {
			@include sl-justify-content(center);

			text-align: center;
		}

		@include sl-parameter('v-align-top') {
			@include sl-align-items(flex-start);

			> * {
				vertical-align: top !important;
			}

			&:after,
			> #{$sl-alignbox-box-selector} {
				vertical-align: top;
			}
		}

		@include sl-parameter('v-align-bottom') {
			@include sl-align-items(flex-end);

			> * {
				vertical-align: bottom !important;
			}

			&:after,
			> #{$sl-alignbox-box-selector} {
				vertical-align: bottom;
			}
		}

		@include sl-parameter('v-align-center') {
			@include sl-align-items(center);

			> * {
				vertical-align: middle !important;
			}

			&:after,
			> #{$sl-alignbox-box-selector} {
				vertical-align: middle;
			}
		}
	}

	#{$sl-alignbox-group-selector} {
		position: relative;
		width: 100%;
		height: 100%;

		> #{$sl-alignbox-selector} {
			position: absolute;
			top: 0;
			left: 0;

			@include sl-parameter('h-contain') {
				left: (100% / 3);
				width: (100% / 3);

				@include sl-parameter('h-align-left') {
					left: 0;
				}

				@include sl-parameter('h-align-right') {
					left: auto;
					right: 0;
				}
			}

			@include sl-parameter('v-contain') {
				top: (100% / 3);
				height: (100% / 3);

				@include sl-parameter('v-align-top') {
					top: 0;
				}

				@include sl-parameter('v-align-bottom') {
					top: auto;
					bottom: 0;
				}
			}
		}
	}
}
