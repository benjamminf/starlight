////
/// Shape utilities
/// @group extra-utilities
/// @author Benjamin Fleming
////


// Settings
// --------

/// Controls whether styles in this file (shape) are generated.
/// @type Boolean
$sl-generate-shape: $sl-generate !default;


// Mixins
// ------

/// Converts an element into a triangle using border hacks
/// TODO: Support width/height explicit properties
/// @param {String} $direction - Either top/up, topright/upright, right, bottomright/downright, bottom/down,
///   bottomleft/downleft, left or topleft/upleft
/// @param {Color} $color - The color of the arrow
/// @param {Number} $size
/// @param {Number} $point-size [$size * 0.866] - Defaults to portion of $size to output an equilateral triangle
/// @output Border styles
@mixin sl-triangle($direction, $color, $size, $point-size: $size * 0.866) {
	display: block;
	width: 0;
	height: 0;
	border: $size inset transparent; // Use inset to fix firefox anti-aliasing bug

	$diagonal-size: ($size / 2);
	$diagonal-h-size: ($point-size / 2);
	$diagonal-v-size: ($size * $size / $point-size / 2);

	@if $direction == top or $direction == up {
		border-top-width: 0;
		border-bottom: solid $point-size $color;

	} @else if $direction == bottom or $direction == down {
		border-top: solid $point-size $color;
		border-bottom-width: 0;

	} @else if $direction == left {
		border-left-width: 0;
		border-right: solid $point-size $color;

	} @else if $direction == right {
		border-left: solid $point-size $color;
		border-right-width: 0;

	} @else if $direction == topleft or $direction == upleft {
		border-width: $diagonal-size;
		border-top: solid $diagonal-v-size $color;
		border-left: solid $diagonal-h-size $color;

	} @else if $direction == topright or $direction == upright {
		border-width: $diagonal-size;
		border-top: solid $diagonal-v-size $color;
		border-right: solid $diagonal-h-size $color;

	} @else if $direction == bottomleft or $direction == downleft {
		border-width: $diagonal-size;
		border-bottom: solid $diagonal-v-size $color;
		border-left: solid $diagonal-h-size $color;

	} @else if $direction == bottomright or $direction == downright {
		border-width: $diagonal-size;
		border-bottom: solid $diagonal-v-size $color;
		border-right: solid $diagonal-h-size $color;
	}
}

/// Sets the color of a triangle
/// @param {String} $direction - Either top/up, topright/upright, right, bottomright/downright, bottom/down,
///   bottomleft/downleft, left or topleft/upleft
/// @param {Color} $color - The color of the arrow
@mixin sl-triangle-color($direction, $color) {

	@if $direction == top or $direction == up {
		border-bottom-color: $color;

	} @else if $direction == bottom or $direction == down {
		border-top-color: $color;

	} @else if $direction == left {
		border-right-color: $color;

	} @else if $direction == right {
		border-left-color: $color;

	} @else if $direction == topleft or $direction == upleft {
		border-top-color: $color;
		border-left-color: $color;

	} @else if $direction == topright or $direction == upright {
		border-top-color: $color;
		border-right-color: $color;

	} @else if $direction == bottomleft or $direction == downleft {
		border-bottom-color: $color;
		border-left-color: $color;

	} @else if $direction == bottomright or $direction == downright {
		border-bottom-color: $color;
		border-right-color: $color;
	}
}


// Styles
// ------

@if $sl-generate-shape {

	@include sl-utility('pill') {
		border-radius: 9999px;
	}

	@include sl-utility('circle') {
		border-radius: 50%;
	}
}
